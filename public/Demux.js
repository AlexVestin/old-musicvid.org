var Demuxer = function(Demuxer) {
  Demuxer = Demuxer || {};

var b;b||(b=typeof Demuxer !== 'undefined' ? Demuxer : {});var aa={},ca;for(ca in b)b.hasOwnProperty(ca)&&(aa[ca]=b[ca]);b.arguments=[];b.thisProgram="./this.program";b.quit=function(a,c){throw c;};b.preRun=[];b.postRun=[];var da=!1,ea=!1,fa=!1,ha=!1;
if(b.ENVIRONMENT)if("WEB"===b.ENVIRONMENT)da=!0;else if("WORKER"===b.ENVIRONMENT)ea=!0;else if("NODE"===b.ENVIRONMENT)fa=!0;else if("SHELL"===b.ENVIRONMENT)ha=!0;else throw Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.");else da="object"===typeof window,ea="function"===typeof importScripts,fa="object"===typeof process&&"function"===typeof require&&!da&&!ea,ha=!da&&!fa&&!ea;
if(fa){var ia,ja;b.read=function(a,c){ia||(ia=require("fs"));ja||(ja=require("path"));a=ja.normalize(a);a=ia.readFileSync(a);return c?a:a.toString()};b.readBinary=function(a){a=b.read(a,!0);a.buffer||(a=new Uint8Array(a));assert(a.buffer);return a};1<process.argv.length&&(b.thisProgram=process.argv[1].replace(/\\/g,"/"));b.arguments=process.argv.slice(2);process.on("uncaughtException",function(a){if(!(a instanceof ka))throw a;});process.on("unhandledRejection",function(){b.printErr("node.js exiting due to unhandled promise rejection");
process.exit(1)});b.inspect=function(){return"[Emscripten Module object]"}}else if(ha)"undefined"!=typeof read&&(b.read=function(a){return read(a)}),b.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");assert("object"===typeof a);return a},"undefined"!=typeof scriptArgs?b.arguments=scriptArgs:"undefined"!=typeof arguments&&(b.arguments=arguments),"function"===typeof quit&&(b.quit=function(a){quit(a)});else if(da||ea)b.read=function(a){var c=
new XMLHttpRequest;c.open("GET",a,!1);c.send(null);return c.responseText},ea&&(b.readBinary=function(a){var c=new XMLHttpRequest;c.open("GET",a,!1);c.responseType="arraybuffer";c.send(null);return new Uint8Array(c.response)}),b.readAsync=function(a,c,d){var f=new XMLHttpRequest;f.open("GET",a,!0);f.responseType="arraybuffer";f.onload=function(){200==f.status||0==f.status&&f.response?c(f.response):d()};f.onerror=d;f.send(null)},"undefined"!=typeof arguments&&(b.arguments=arguments),b.setWindowTitle=
function(a){document.title=a};else throw Error("unknown runtime environment");b.print="undefined"!==typeof console?console.log.bind(console):"undefined"!==typeof print?print:null;b.printErr="undefined"!==typeof printErr?printErr:"undefined"!==typeof console&&console.warn.bind(console)||b.print;b.print=b.print;b.printErr=b.printErr;for(ca in aa)aa.hasOwnProperty(ca)&&(b[ca]=aa[ca]);aa=void 0;la=ma=function(){e("cannot use the stack before compiled code is ready to run, and has provided stack access")};
function na(a){assert(!oa);var c=pa;pa=pa+a+15&-16;return c}function qa(a){assert(ra);var c=g[ra>>2];a=c+a+15&-16;g[ra>>2]=a;return a>=l&&!sa()?(g[ra>>2]=c,0):c}function ta(a){var c;c||(c=16);return Math.ceil(a/c)*c}function ua(a){wa||(wa={});wa[a]||(wa[a]=1,b.printErr(a))}var wa,xa=0;function assert(a,c){a||e("Assertion failed: "+c)}
function ya(a,c){if("number"===typeof a){var d=!0;var f=a}else d=!1,f=a.length;c=4==c?h:["function"===typeof za?za:na,ma,na,qa][void 0===c?2:c](Math.max(f,1));if(d){var h=c;assert(0==(c&3));for(a=c+(f&-4);h<a;h+=4)g[h>>2]=0;for(a=c+f;h<a;)Aa[h++>>0]=0;return c}a.subarray||a.slice?Ba.set(a,c):Ba.set(new Uint8Array(a),c);return c}
function Ca(a){var c;if(0===c||!a)return"";for(var d=0,f,h=0;;){assert(a+h<l);f=Ba[a+h>>0];d|=f;if(0==f&&!c)break;h++;if(c&&h==c)break}c||(c=h);f="";if(128>d){for(;0<c;)d=String.fromCharCode.apply(String,Ba.subarray(a,a+Math.min(c,1024))),f=f?f+d:d,a+=1024,c-=1024;return f}return Da(Ba,a)}var Ea="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;
function Da(a,c){for(var d=c;a[d];)++d;if(16<d-c&&a.subarray&&Ea)return Ea.decode(a.subarray(c,d));for(d="";;){var f=a[c++];if(!f)return d;if(f&128){var h=a[c++]&63;if(192==(f&224))d+=String.fromCharCode((f&31)<<6|h);else{var k=a[c++]&63;if(224==(f&240))f=(f&15)<<12|h<<6|k;else{var Z=a[c++]&63;if(240==(f&248))f=(f&7)<<18|h<<12|k<<6|Z;else{var ba=a[c++]&63;if(248==(f&252))f=(f&3)<<24|h<<18|k<<12|Z<<6|ba;else{var va=a[c++]&63;f=(f&1)<<30|h<<24|k<<18|Z<<12|ba<<6|va}}}65536>f?d+=String.fromCharCode(f):
(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else d+=String.fromCharCode(f)}}
function Fa(a,c,d,f){if(0<f){f=d+f-1;for(var h=0;h<a.length;++h){var k=a.charCodeAt(h);55296<=k&&57343>=k&&(k=65536+((k&1023)<<10)|a.charCodeAt(++h)&1023);if(127>=k){if(d>=f)break;c[d++]=k}else{if(2047>=k){if(d+1>=f)break;c[d++]=192|k>>6}else{if(65535>=k){if(d+2>=f)break;c[d++]=224|k>>12}else{if(2097151>=k){if(d+3>=f)break;c[d++]=240|k>>18}else{if(67108863>=k){if(d+4>=f)break;c[d++]=248|k>>24}else{if(d+5>=f)break;c[d++]=252|k>>30;c[d++]=128|k>>24&63}c[d++]=128|k>>18&63}c[d++]=128|k>>12&63}c[d++]=
128|k>>6&63}c[d++]=128|k&63}}c[d]=0}}function Ga(a){for(var c=0,d=0;d<a.length;++d){var f=a.charCodeAt(d);55296<=f&&57343>=f&&(f=65536+((f&1023)<<10)|a.charCodeAt(++d)&1023);127>=f?++c:c=2047>=f?c+2:65535>=f?c+3:2097151>=f?c+4:67108863>=f?c+5:c+6}return c}"undefined"!==typeof TextDecoder&&new TextDecoder("utf-16le");function Ha(a){return a.replace(/__Z[\w\d_]+/g,function(a){ua("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return a===a?a:a+" ["+a+"]"})}
function Ia(){a:{var a=Error();if(!a.stack){try{throw Error(0);}catch(c){a=c}if(!a.stack){a="(no stack trace available)";break a}}a=a.stack.toString()}b.extraStackTrace&&(a+="\n"+b.extraStackTrace());return Ha(a)}var Ja=65536,Ka=16777216,La=16777216;function Ma(a,c){0<a%c&&(a+=c-a%c);return a}var buffer,Aa,Ba,Na,g,Oa;
function Pa(){b.HEAP8=Aa=new Int8Array(buffer);b.HEAP16=Na=new Int16Array(buffer);b.HEAP32=g=new Int32Array(buffer);b.HEAPU8=Ba=new Uint8Array(buffer);b.HEAPU16=new Uint16Array(buffer);b.HEAPU32=Oa=new Uint32Array(buffer);b.HEAPF32=new Float32Array(buffer);b.HEAPF64=new Float64Array(buffer)}var Ra,pa,oa,Sa,Ta,Ua,Va,ra;Ra=pa=Sa=Ta=Ua=Va=ra=0;oa=!1;
function Wa(){34821223==Oa[(Ua>>2)-1]&&2310721022==Oa[(Ua>>2)-2]||e("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x"+Oa[(Ua>>2)-2].toString(16)+" "+Oa[(Ua>>2)-1].toString(16));if(1668509029!==g[0])throw"Runtime error: The application has corrupted its heap memory area (address zero)!";}
b.reallocBuffer||(b.reallocBuffer=function(a){try{if(ArrayBuffer.h)var c=ArrayBuffer.h(buffer,a);else{var d=Aa;c=new ArrayBuffer(a);(new Int8Array(c)).set(d)}}catch(f){return!1}return Xa(c)?c:!1});
function sa(){assert(g[ra>>2]>l);var a=b.usingWasm?Ja:Ka,c=2147483648-a;if(g[ra>>2]>c)return b.printErr("Cannot enlarge memory, asked to go up to "+g[ra>>2]+" bytes, but the limit is "+c+" bytes!"),!1;var d=l;for(l=Math.max(l,La);l<g[ra>>2];)536870912>=l?l=Ma(2*l,a):l=Math.min(Ma((3*l+2147483648)/4,a),c);a=Date.now();c=b.reallocBuffer(l);if(!c||c.byteLength!=l)return b.printErr("Failed to grow the heap from "+d+" bytes to "+l+" bytes, not enough memory!"),c&&b.printErr("Expected to get back a buffer of size "+
l+" bytes, but instead got back a buffer of size "+c.byteLength),l=d,!1;b.buffer=buffer=c;Pa();b.printErr("enlarged memory arrays from "+d+" to "+l+", took "+(Date.now()-a)+" ms (has ArrayBuffer.transfer? "+!!ArrayBuffer.h+")");b.usingWasm||b.printErr("Warning: Enlarging memory arrays, this is not fast! "+[d,l]);return!0}var Ya;try{Ya=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get),Ya(new ArrayBuffer(4))}catch(a){Ya=function(c){return c.byteLength}}
var Za=b.TOTAL_STACK||5242880,l=b.TOTAL_MEMORY||16777216;l<Za&&b.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+l+"! (TOTAL_STACK="+Za+")");assert("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&void 0!==Int32Array.prototype.subarray&&void 0!==Int32Array.prototype.set,"JS engine does not provide full typed array support");
b.buffer?(buffer=b.buffer,assert(buffer.byteLength===l,"provided buffer should be "+l+" bytes, but it is "+buffer.byteLength)):("object"===typeof WebAssembly&&"function"===typeof WebAssembly.Memory?(assert(0===l%Ja),b.wasmMemory=new WebAssembly.Memory({initial:l/Ja}),buffer=b.wasmMemory.buffer):buffer=new ArrayBuffer(l),assert(buffer.byteLength===l),b.buffer=buffer);Pa();g[0]=1668509029;Na[1]=25459;if(115!==Ba[2]||99!==Ba[3])throw"Runtime error: expected the system to be little-endian!";
function $a(a){for(;0<a.length;){var c=a.shift();if("function"==typeof c)c();else{var d=c.s;"number"===typeof d?void 0===c.f?b.dynCall_v(d):b.dynCall_vi(d,c.f):d(void 0===c.f?null:c.f)}}}var ab=[],bb=[],cb=[],db=[],eb=[],m=!1,n=!1;function fb(){var a=b.preRun.shift();ab.unshift(a)}assert(Math.imul&&Math.fround&&Math.clz32&&Math.trunc,"this is a legacy browser, build with LEGACY_VM_SUPPORT");var gb=Math.abs,hb=Math.trunc,ib=0,jb=null,kb=null,lb={};
function mb(){ib++;b.monitorRunDependencies&&b.monitorRunDependencies(ib);assert(!lb["wasm-instantiate"]);lb["wasm-instantiate"]=1;null===jb&&"undefined"!==typeof setInterval&&(jb=setInterval(function(){if(xa)clearInterval(jb),jb=null;else{var a=!1,c;for(c in lb)a||(a=!0,b.printErr("still waiting on run dependencies:")),b.printErr("dependency: "+c);a&&b.printErr("(end of list)")}},1E4))}b.preloadedImages={};b.preloadedAudios={};
function nb(){e("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1")}var FS={};b.FS_createDataFile=function(){nb()};b.FS_createPreloadedFile=function(){nb()};
function ob(a){return String.prototype.startsWith?a.startsWith("data:application/octet-stream;base64,"):0===a.indexOf("data:application/octet-stream;base64,")}
(function(){function a(){try{if(b.wasmBinary)return new Uint8Array(b.wasmBinary);if(b.readBinary)return b.readBinary(h);throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)";}catch(Qa){e(Qa)}}function c(){return b.wasmBinary||!da&&!ea||"function"!==typeof fetch?new Promise(function(c){c(a())}):fetch(h,{credentials:"same-origin"}).then(function(a){if(!a.ok)throw"failed to load wasm binary file at '"+
h+"'";return a.arrayBuffer()}).catch(function(){return a()})}function d(a){function d(a){ba=a.exports;if(ba.memory){a=ba.memory;var c=b.buffer;a.byteLength<c.byteLength&&b.printErr("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");c=new Int8Array(c);(new Int8Array(a)).set(c);b.buffer=buffer=a;Pa()}b.asm=ba;b.usingWasm=!0;ib--;b.monitorRunDependencies&&b.monitorRunDependencies(ib);assert(lb["wasm-instantiate"]);delete lb["wasm-instantiate"];
0==ib&&(null!==jb&&(clearInterval(jb),jb=null),kb&&(a=kb,kb=null,a()))}function f(a){assert(b===Qa,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");Qa=null;d(a.instance)}function k(a){c().then(function(a){return WebAssembly.instantiate(a,Z)}).then(a).catch(function(a){b.printErr("failed to asynchronously prepare wasm: "+a);e(a)})}if("object"!==typeof WebAssembly)return b.printErr("no native wasm support detected"),!1;if(!(b.wasmMemory instanceof
WebAssembly.Memory))return b.printErr("no native wasm Memory in use"),!1;a.memory=b.wasmMemory;Z.global={NaN:NaN,Infinity:Infinity};Z["global.Math"]=Math;Z.env=a;mb();if(b.instantiateWasm)try{return b.instantiateWasm(Z,d)}catch(Sb){return b.printErr("Module.instantiateWasm callback failed with error: "+Sb),!1}var Qa=b;b.wasmBinary||"function"!==typeof WebAssembly.instantiateStreaming||ob(h)||"function"!==typeof fetch?k(f):WebAssembly.instantiateStreaming(fetch(h,{credentials:"same-origin"}),Z).then(f).catch(function(a){b.printErr("wasm streaming compile failed: "+
a);b.printErr("falling back to ArrayBuffer instantiation");k(f)});return{}}var f="Demux.wast",h="Demux.wasm",k="Demux.temp.asm.js";"function"===typeof b.locateFile&&(ob(f)||(f=b.locateFile(f)),ob(h)||(h=b.locateFile(h)),ob(k)||(k=b.locateFile(k)));var Z={global:null,env:null,asm2wasm:{"f64-rem":function(a,c){return a%c},"debugger":function(){debugger}},parent:b},ba=null;b.asmPreload=b.asm;var va=b.reallocBuffer;b.reallocBuffer=function(a){if("asmjs"===Ub)var c=va(a);else a:{a=Ma(a,b.usingWasm?Ja:
Ka);var d=b.buffer.byteLength;if(b.usingWasm)try{c=-1!==b.wasmMemory.grow((a-d)/65536)?b.buffer=b.wasmMemory.buffer:null;break a}catch(Tb){console.error("Module.reallocBuffer: Attempted to grow from "+d+" bytes to "+a+" bytes, but got error: "+Tb);c=null;break a}c=void 0}return c};var Ub="";b.asm=function(a,c){if(!c.table){a=b.wasmTableSize;void 0===a&&(a=1024);var f=b.wasmMaxTableSize;c.table="object"===typeof WebAssembly&&"function"===typeof WebAssembly.Table?void 0!==f?new WebAssembly.Table({initial:a,
maximum:f,element:"anyfunc"}):new WebAssembly.Table({initial:a,element:"anyfunc"}):Array(a);b.wasmTable=c.table}c.memoryBase||(c.memoryBase=b.STATIC_BASE);c.tableBase||(c.tableBase=0);(c=d(c))||e("no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods");return c}})();Ra=1024;pa=Ra+1325424;bb.push();b.STATIC_BASE=Ra;b.STATIC_BUMP=1325424;var pb=pa;pa+=16;assert(0==pb%8);var qb=0;
function rb(){qb+=4;return g[qb-4>>2]}var sb={};function tb(){var a=b._fflush;a&&a(0);if(a=ub.g){var c=ub.b;c[1].length&&a(1,10);c[2].length&&a(2,10)}}function ub(a,c){qb=c;try{var d=rb(),f=rb(),h=rb();a=0;ub.b||(ub.b=[null,[],[]],ub.g=function(a,c){var d=ub.b[a];assert(d);0===c||10===c?((1===a?b.print:b.printErr)(Da(d,0)),d.length=0):d.push(c)});for(c=0;c<h;c++){for(var k=g[f+8*c>>2],Z=g[f+(8*c+4)>>2],ba=0;ba<Z;ba++)ub.g(d,Ba[k+ba]);a+=Z}return a}catch(va){return e(va),-va.a}}
function vb(a){b.___errno_location?g[b.___errno_location()>>2]=a:b.printErr("failed to set errno from JS");return a}function wb(){void 0===wb.start&&(wb.start=Date.now());return 1E3*(Date.now()-wb.start)|0}function xb(){e()}var yb=pa;pa+=16;var zb,Ab={};function Bb(a){if(0===a)return 0;a=Ca(a);if(!Ab.hasOwnProperty(a))return 0;Bb.b&&Cb(Bb.b);a=Ab[a];var c=Ga(a)+1,d=za(c);d&&Fa(a,Aa,d,c);Bb.b=d;return Bb.b}var Eb=ya(Db("GMT"),2);
ya([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,
0,1,0,2,0,1,0],2);function Fb(a){return Math.pow(2,a)}var Gb=pa,Hb=pa+=16,Ib=pa+=16;pa+=16;function Jb(){function a(a){return(a=a.toTimeString().match(/\(([A-Za-z ]+)\)$/))?a[1]:"GMT"}if(!Kb){Kb=!0;g[Ib>>2]=60*(new Date).getTimezoneOffset();var c=new Date(2E3,0,1),d=new Date(2E3,6,1);g[Hb>>2]=Number(c.getTimezoneOffset()!=d.getTimezoneOffset());var f=a(c),h=a(d);f=ya(Db(f),0);h=ya(Db(h),0);d.getTimezoneOffset()<c.getTimezoneOffset()?(g[Gb>>2]=f,g[Gb+4>>2]=h):(g[Gb>>2]=h,g[Gb+4>>2]=f)}}var Kb;
fa?xb=function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:"undefined"!==typeof dateNow?xb=dateNow:"object"===typeof self&&self.performance&&"function"===typeof self.performance.now?xb=function(){return self.performance.now()}:"object"===typeof performance&&"function"===typeof performance.now?xb=function(){return performance.now()}:xb=Date.now;var Lb,Mb;
zb?(Mb=g[yb>>2],Lb=g[Mb>>2]):(zb=!0,Ab.USER=Ab.LOGNAME="web_user",Ab.PATH="/",Ab.PWD="/",Ab.HOME="/home/web_user",Ab.LANG="C.UTF-8",Ab._=b.thisProgram,Lb=na(1024),Mb=na(256),g[Mb>>2]=Lb,g[yb>>2]=Mb);var Nb=[],Ob=0,Pb;for(Pb in Ab)if("string"===typeof Ab[Pb]){var Qb=Pb+"="+Ab[Pb];Nb.push(Qb);Ob+=Qb.length}if(1024<Ob)throw Error("Environment size exceeded TOTAL_ENV_SIZE!");
for(var Rb=0;Rb<Nb.length;Rb++){for(var Vb=Qb=Nb[Rb],Wb=Lb,Xb=0;Xb<Vb.length;++Xb)assert(Vb.charCodeAt(Xb)===Vb.charCodeAt(Xb)&255),Aa[Wb++>>0]=Vb.charCodeAt(Xb);Aa[Wb>>0]=0;g[Mb+4*Rb>>2]=Lb;Lb+=Qb.length+1}g[Mb+4*Nb.length>>2]=0;ra=na(4);Sa=Ta=ta(pa);Ua=Sa+Za;Va=ta(Ua);g[ra>>2]=Va;oa=!0;assert(Va<l,"TOTAL_MEMORY not big enough for stack");function Db(a){var c=Array(Ga(a)+1);Fa(a,c,0,c.length);return c}
var p="0 _sinh _cosh _tanh _sin _cos _tan _atan _asin _acos _exp _log _fabs _etime 0 0".split(" "),q=["0"],r=["0"],t=["0","_avpriv_scalarproduct_float_c","_ssim_end4_931","_ssim_end4"],u="0 _av_default_item_name _format_to_name _format_child_class_next _get_category _ff_avio_child_class_next _urlcontext_to_name _ff_urlcontext_child_class_next _mov_write_header _mov_write_trailer _mov_init _ff_bsf_child_class_next _mp3lame_encode_init _mp3lame_encode_close _X264_init _X264_close _context_to_name _codec_child_class_next _get_category_4279 ___stdio_close _io_short_seek _av_buffer_allocz _av_buffer_alloc _avio_rb16 _avio_rl16 _x264_8_encoder_delayed_frames _x264_8_encoder_maximum_delayed_frames _x264_10_encoder_delayed_frames _x264_10_encoder_maximum_delayed_frames _decimate_score15_1060 _decimate_score16_1061 _decimate_score64_1062 _coeff_last4_1063 _coeff_last8_1064 _coeff_last15_1065 _coeff_last16_1066 _coeff_last64_1067 _decimate_score15 _decimate_score16 _decimate_score64 _coeff_last4 _coeff_last8 _coeff_last15 _coeff_last16 _coeff_last64 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0".split(" "),
v="0 _format_child_next _ff_avio_child_next _urlcontext_child_next _mov_write_packet _mov_check_bitstream _bsf_child_next _null_filter _codec_child_next _color_table_compare _descriptor_compare _io_read_pause _avcodec_default_get_format _x264_8_encoder_reconfig _x264_10_encoder_reconfig _optimize_chroma_2x2_dc_1057 _optimize_chroma_2x4_dc_1058 _coeff_level_run4_1068 _coeff_level_run8_1069 _coeff_level_run15_1070 _coeff_level_run16_1071 _optimize_chroma_2x2_dc _optimize_chroma_2x4_dc _coeff_level_run4 _coeff_level_run8 _coeff_level_run15 _coeff_level_run16 0 0 0 0 0".split(" "),
w=["0","_find_scalefac_x34","_guess_scalefac_x34","0"],x="0 ___stdout_write ___stdio_seek ___stdio_write _sn_write _read_packet _null_buf_write _dyn_buf_write _dyn_packet_buf_write _io_write_packet _io_read_packet _avcodec_default_get_buffer2 _choose_table_nonMMX _x264_8_encoder_headers _x264_10_encoder_headers _pixel_var2_8x16_927 _pixel_var2_8x8_928 _pixel_vsad_932 _zigzag_sub_8x8_field_989 _zigzag_sub_8x8_frame_990 _zigzag_sub_4x4_field_991 _zigzag_sub_4x4_frame_992 _memcpy _quant_8x8_1047 _quant_4x4_1048 _quant_4x4x4_1049 _quant_4x4_dc_1050 _quant_2x2_dc_1051 _nal_escape_c_1097 _pixel_var2_8x16 _pixel_var2_8x8 _pixel_vsad _zigzag_sub_8x8_field _zigzag_sub_8x8_frame _zigzag_sub_4x4_field _zigzag_sub_4x4_frame _quant_8x8 _quant_4x4 _quant_4x4x4 _quant_4x4_dc _quant_2x2_dc _nal_escape_c _do_read ___stdio_read 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0".split(" "),
y="0 _mp3lame_encode_frame _X264_frame _count_bit_null _count_bit_noESC _count_bit_noESC_from2 _count_bit_noESC_from3 _x264_pixel_sad_16x16_863 _x264_pixel_sad_16x8_864 _x264_pixel_sad_8x16_865 _x264_pixel_sad_8x8_866 _x264_pixel_sad_8x4_867 _x264_pixel_sad_4x8_868 _x264_pixel_sad_4x4_869 _x264_pixel_sad_4x16_870 _x264_pixel_ssd_16x16_885 _x264_pixel_ssd_16x8_886 _x264_pixel_ssd_8x16_887 _x264_pixel_ssd_8x8_888 _x264_pixel_ssd_8x4_889 _x264_pixel_ssd_4x8_890 _x264_pixel_ssd_4x4_891 _x264_pixel_ssd_4x16_892 _x264_pixel_satd_16x16_893 _x264_pixel_satd_16x8_894 _x264_pixel_satd_8x16_895 _x264_pixel_satd_8x8_896 _x264_pixel_satd_8x4_897 _x264_pixel_satd_4x8_898 _x264_pixel_satd_4x4_899 _x264_pixel_satd_4x16_900 _x264_pixel_sa8d_16x16_922 _x264_pixel_sa8d_8x8_923 _zigzag_sub_4x4ac_field_993 _zigzag_sub_4x4ac_frame_994 _x264_pixel_sad_16x16 _x264_pixel_sad_16x8 _x264_pixel_sad_8x16 _x264_pixel_sad_8x8 _x264_pixel_sad_8x4 _x264_pixel_sad_4x8 _x264_pixel_sad_4x4 _x264_pixel_sad_4x16 _x264_pixel_ssd_16x16 _x264_pixel_ssd_16x8 _x264_pixel_ssd_8x16 _x264_pixel_ssd_8x8 _x264_pixel_ssd_8x4 _x264_pixel_ssd_4x8 _x264_pixel_ssd_4x4 _x264_pixel_ssd_4x16 _x264_pixel_satd_16x16 _x264_pixel_satd_16x8 _x264_pixel_satd_8x16 _x264_pixel_satd_8x8 _x264_pixel_satd_8x4 _x264_pixel_satd_4x8 _x264_pixel_satd_4x4 _x264_pixel_satd_4x16 _x264_pixel_sa8d_16x16 _x264_pixel_sa8d_8x8 _zigzag_sub_4x4ac_field _zigzag_sub_4x4ac_frame 0".split(" "),
z="0 _io_open_default _avcodec_default_execute2 _x264_8_encoder_encode _x264_10_encoder_encode _pixel_asd8_933 _pixel_asd8 0".split(" "),A=["0","_avcodec_default_execute"],B="0 _x264_pixel_ads4_919 _x264_pixel_ads2_920 _x264_pixel_ads1_921 _x264_pixel_ads4 _x264_pixel_ads2 _x264_pixel_ads1 0".split(" "),C=["0","_get_ref_792","_get_ref","0"],D=["0"],E=["0"],F=["0"],G=["0","_x264_8_encoder_invalidate_reference","_x264_10_encoder_invalidate_reference","0"],H="0 _x264_pixel_hadamard_ac_16x16_915 _x264_pixel_hadamard_ac_16x8_916 _x264_pixel_hadamard_ac_8x16_917 _x264_pixel_hadamard_ac_8x8_918 _pixel_var_16x16_924 _pixel_var_8x16_925 _pixel_var_8x8_926 _x264_pixel_hadamard_ac_16x16 _x264_pixel_hadamard_ac_16x8 _x264_pixel_hadamard_ac_8x16 _x264_pixel_hadamard_ac_8x8 _pixel_var_16x16 _pixel_var_8x16 _pixel_var_8x8 0".split(" "),
I=["0"],J=["0"],K=["0","_io_read_seek"],L=["0","_seek","_dyn_buf_seek","_io_seek"],M="0 _mov_free _X264_init_static _free_geobtag _free_apic _free_chapter _free_priv _av_free _x264_8_encoder_close _x264_8_encoder_intra_refresh _x264_10_encoder_close _x264_10_encoder_intra_refresh _x264_10_predict_16x16_v_c _x264_10_predict_16x16_h_c _x264_10_predict_16x16_dc_c _x264_10_predict_16x16_p_c _predict_16x16_dc_left_c_835 _predict_16x16_dc_top_c_836 _predict_16x16_dc_128_c_837 _x264_10_predict_8x8c_v_c _x264_10_predict_8x8c_h_c _x264_10_predict_8x8c_dc_c _x264_10_predict_8x8c_p_c _predict_8x8c_dc_left_c_838 _predict_8x8c_dc_top_c_839 _predict_8x8c_dc_128_c_840 _x264_10_predict_8x16c_v_c _x264_10_predict_8x16c_h_c _x264_10_predict_8x16c_dc_c _x264_10_predict_8x16c_p_c _predict_8x16c_dc_left_c_841 _predict_8x16c_dc_top_c_842 _predict_8x16c_dc_128_c_843 _x264_10_predict_4x4_v_c _x264_10_predict_4x4_h_c _x264_10_predict_4x4_dc_c _predict_4x4_ddl_c_854 _predict_4x4_ddr_c_855 _predict_4x4_vr_c_856 _predict_4x4_hd_c_857 _predict_4x4_vl_c_858 _predict_4x4_hu_c_859 _predict_4x4_dc_left_c_860 _predict_4x4_dc_top_c_861 _predict_4x4_dc_128_c_862 _dct4x4dc_980 _idct4x4dc_981 _x264_free _x264_8_predict_16x16_v_c _x264_8_predict_16x16_h_c _x264_8_predict_16x16_dc_c _x264_8_predict_16x16_p_c _predict_16x16_dc_left_c _predict_16x16_dc_top_c _predict_16x16_dc_128_c _x264_8_predict_8x8c_v_c _x264_8_predict_8x8c_h_c _x264_8_predict_8x8c_dc_c _x264_8_predict_8x8c_p_c _predict_8x8c_dc_left_c _predict_8x8c_dc_top_c _predict_8x8c_dc_128_c _x264_8_predict_8x16c_v_c _x264_8_predict_8x16c_h_c _x264_8_predict_8x16c_dc_c _x264_8_predict_8x16c_p_c _predict_8x16c_dc_left_c _predict_8x16c_dc_top_c _predict_8x16c_dc_128_c _x264_8_predict_4x4_v_c _x264_8_predict_4x4_h_c _x264_8_predict_4x4_dc_c _predict_4x4_ddl_c _predict_4x4_ddr_c _predict_4x4_vr_c _predict_4x4_hd_c _predict_4x4_vl_c _predict_4x4_hu_c _predict_4x4_dc_left_c _predict_4x4_dc_top_c _predict_4x4_dc_128_c _dct4x4dc _idct4x4dc 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0".split(" "),
N="0 _macroblock_cache_mv_1_1 _macroblock_cache_mv_2_1 _macroblock_cache_mv_1_2 _macroblock_cache_mv_2_2 _macroblock_cache_mv_4_2 _macroblock_cache_mv_2_4 _macroblock_cache_mv_4_4 _macroblock_cache_mvd_1_1 _macroblock_cache_mvd_2_1 _macroblock_cache_mvd_1_2 _macroblock_cache_mvd_2_2 _macroblock_cache_mvd_4_2 _macroblock_cache_mvd_2_4 _macroblock_cache_mvd_4_4 _macroblock_cache_ref_1_1 _macroblock_cache_ref_2_1 _macroblock_cache_ref_1_2 _macroblock_cache_ref_2_2 _macroblock_cache_ref_4_2 _macroblock_cache_ref_2_4 _macroblock_cache_ref_4_4 _macroblock_cache_mv_1_1_1000 _macroblock_cache_mv_2_1_1001 _macroblock_cache_mv_1_2_1002 _macroblock_cache_mv_2_2_1003 _macroblock_cache_mv_4_2_1004 _macroblock_cache_mv_2_4_1005 _macroblock_cache_mv_4_4_1006 _macroblock_cache_mvd_1_1_1007 _macroblock_cache_mvd_2_1_1008 _macroblock_cache_mvd_1_2_1009 _macroblock_cache_mvd_2_2_1010 _macroblock_cache_mvd_4_2_1011 _macroblock_cache_mvd_2_4_1012 _macroblock_cache_mvd_4_4_1013 _macroblock_cache_ref_1_1_1014 _macroblock_cache_ref_2_1_1015 _macroblock_cache_ref_1_2_1016 _macroblock_cache_ref_2_2_1017 _macroblock_cache_ref_4_2_1018 _macroblock_cache_ref_2_4_1019 _macroblock_cache_ref_4_4_1020 _sha1_transform _av_buffer_default_free _io_close_default _pool_release_buffer _fht _lame_report_def _x264_8_encoder_parameters _x264_10_encoder_parameters _x264_10_predict_8x8_v_c _x264_10_predict_8x8_h_c _x264_10_predict_8x8_dc_c _predict_8x8_ddl_c_844 _predict_8x8_ddr_c_845 _predict_8x8_vr_c_846 _predict_8x8_hd_c_847 _predict_8x8_vl_c_848 _predict_8x8_hu_c_849 _predict_8x8_dc_left_c_850 _predict_8x8_dc_top_c_851 _predict_8x8_dc_128_c_852 _add4x4_idct_967 _add8x8_idct_970 _add8x8_idct_dc_971 _add16x16_idct_974 _add16x16_idct_dc_975 _add8x8_idct8_977 _add16x16_idct8_979 _dct2x4dc_982 _zigzag_scan_8x8_field_985 _zigzag_scan_8x8_frame_986 _zigzag_scan_4x4_field_987 _zigzag_scan_4x4_frame_988 _weight_cache_807 _memzero_aligned_819 _integral_init8v_824 _x264_8_predict_8x8_v_c _x264_8_predict_8x8_h_c _x264_8_predict_8x8_dc_c _predict_8x8_ddl_c _predict_8x8_ddr_c _predict_8x8_vr_c _predict_8x8_hd_c _predict_8x8_vl_c _predict_8x8_hu_c _predict_8x8_dc_left_c _predict_8x8_dc_top_c _predict_8x8_dc_128_c _add4x4_idct _add8x8_idct _add8x8_idct_dc _add16x16_idct _add16x16_idct_dc _add8x8_idct8 _add16x16_idct8 _dct2x4dc _zigzag_scan_8x8_field _zigzag_scan_8x8_frame _zigzag_scan_4x4_field _zigzag_scan_4x4_frame _weight_cache _memzero_aligned _integral_init8v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0".split(" "),
O=["0","_vector_dmac_scalar_c","_vector_dmul_scalar_c","0"],P=["0","_vector_fmac_scalar_c","_vector_fmul_scalar_c","0"],Q="0 _butterflies_float_c _x264_8_nal_encode _x264_10_nal_encode _intra_sad_x3_4x4_934 _intra_satd_x3_4x4_935 _intra_sad_x3_8x8_936 _intra_sa8d_x3_8x8_937 _intra_sad_x3_8x8c_938 _intra_satd_x3_8x8c_939 _intra_sad_x3_8x16c_940 _intra_satd_x3_8x16c_941 _intra_sad_x3_16x16_942 _intra_satd_x3_16x16_943 _sub4x4_dct_966 _sub8x8_dct_968 _sub8x8_dct_dc_969 _sub8x16_dct_dc_972 _sub16x16_dct_973 _sub8x8_dct8_976 _sub16x16_dct8_978 _zigzag_interleave_8x8_cavlc_995 _prefetch_ref_null_818 _integral_init4h_821 _integral_init8h_822 _integral_init4v_823 _mbtree_fix8_pack_827 _mbtree_fix8_unpack_828 _dequant_4x4_1052 _dequant_4x4_dc_1053 _dequant_8x8_1054 _idct_dequant_2x4_dconly_1056 _intra_sad_x3_4x4 _intra_satd_x3_4x4 _intra_sad_x3_8x8 _intra_sa8d_x3_8x8 _intra_sad_x3_8x8c _intra_satd_x3_8x8c _intra_sad_x3_8x16c _intra_satd_x3_8x16c _intra_sad_x3_16x16 _intra_satd_x3_16x16 _sub4x4_dct _sub8x8_dct _sub8x8_dct_dc _sub8x16_dct_dc _sub16x16_dct _sub8x8_dct8 _sub16x16_dct8 _zigzag_interleave_8x8_cavlc _prefetch_ref_null _integral_init4h _integral_init8h _integral_init4v _mbtree_fix8_pack _mbtree_fix8_unpack _dequant_4x4 _dequant_4x4_dc _dequant_8x8 _idct_dequant_2x4_dconly 0 0 0 0".split(" "),
R="0 _X264_log _vector_fmul_c _vector_fmul_reverse_c _long_block_constrain _short_block_constrain _init_xrpow_core_c _x264_log_default _predict_8x8_filter_c_853 _load_deinterleave_chroma_fenc_812 _load_deinterleave_chroma_fdec_813 _idct_dequant_2x4_dc_1055 _denoise_dct_1059 _deblock_v_luma_intra_c_1080 _deblock_h_luma_intra_c_1081 _deblock_v_chroma_intra_c_1082 _deblock_h_chroma_intra_c_1083 _deblock_h_chroma_422_intra_c_1084 _deblock_h_luma_intra_mbaff_c_1087 _deblock_h_chroma_intra_mbaff_c_1088 _predict_8x8_filter_c _load_deinterleave_chroma_fenc _load_deinterleave_chroma_fdec _idct_dequant_2x4_dc _denoise_dct _deblock_v_luma_intra_c _deblock_h_luma_intra_c _deblock_v_chroma_intra_c _deblock_h_chroma_intra_c _deblock_h_chroma_422_intra_c _deblock_h_luma_intra_mbaff_c _deblock_h_chroma_intra_mbaff_c".split(" "),
S="0 _vector_fmul_window_c _vector_fmul_add_c _ssim_4x4x2_core_930 _mc_copy_w16_808 _mc_copy_w8_809 _mc_copy_w4_810 _store_interleave_chroma_811 _prefetch_fenc_null_817 _deblock_v_luma_c_1075 _deblock_h_luma_c_1076 _deblock_v_chroma_c_1077 _deblock_h_chroma_c_1078 _deblock_h_chroma_422_c_1079 _deblock_h_luma_mbaff_c_1085 _deblock_h_chroma_mbaff_c_1086 _ssim_4x4x2_core _mc_copy_w16 _mc_copy_w8 _mc_copy_w4 _store_interleave_chroma _prefetch_fenc_null _deblock_v_luma_c _deblock_h_luma_c _deblock_v_chroma_c _deblock_h_chroma_c _deblock_h_chroma_422_c _deblock_h_luma_mbaff_c _deblock_h_chroma_mbaff_c 0 0 0".split(" "),
T="0 _read_geobtag _read_apic _read_chapter _read_priv _mc_weight_w2_829 _mc_weight_w4_830 _mc_weight_w8_831 _mc_weight_w12_832 _mc_weight_w16_833 _mc_weight_w20_834 _mc_weight_w2 _mc_weight_w4 _mc_weight_w8 _mc_weight_w12 _mc_weight_w16 _mc_weight_w20 _aes_encrypt _x264_pixel_sad_x3_16x16_871 _x264_pixel_sad_x3_16x8_872 _x264_pixel_sad_x3_8x16_873 _x264_pixel_sad_x3_8x8_874 _x264_pixel_sad_x3_8x4_875 _x264_pixel_sad_x3_4x8_876 _x264_pixel_sad_x3_4x4_877 _x264_pixel_satd_x3_16x16_901 _x264_pixel_satd_x3_16x8_902 _x264_pixel_satd_x3_8x16_903 _x264_pixel_satd_x3_8x8_904 _x264_pixel_satd_x3_8x4_905 _x264_pixel_satd_x3_4x8_906 _x264_pixel_satd_x3_4x4_907 _x264_10_plane_copy_c _x264_10_plane_copy_swap_c _deblock_strength_c_1089 _x264_pixel_sad_x3_16x16 _x264_pixel_sad_x3_16x8 _x264_pixel_sad_x3_8x16 _x264_pixel_sad_x3_8x8 _x264_pixel_sad_x3_8x4 _x264_pixel_sad_x3_4x8 _x264_pixel_sad_x3_4x4 _x264_pixel_satd_x3_16x16 _x264_pixel_satd_x3_16x8 _x264_pixel_satd_x3_8x16 _x264_pixel_satd_x3_8x8 _x264_pixel_satd_x3_8x4 _x264_pixel_satd_x3_4x8 _x264_pixel_satd_x3_4x4 _x264_8_plane_copy_c _x264_8_plane_copy_swap_c _deblock_strength_c 0 0 0 0 0 0 0 0 0 0 0 0".split(" "),
U="0 _x264_pixel_sad_x4_16x16_878 _x264_pixel_sad_x4_16x8_879 _x264_pixel_sad_x4_8x16_880 _x264_pixel_sad_x4_8x8_881 _x264_pixel_sad_x4_8x4_882 _x264_pixel_sad_x4_4x8_883 _x264_pixel_sad_x4_4x4_884 _x264_pixel_satd_x4_16x16_908 _x264_pixel_satd_x4_16x8_909 _x264_pixel_satd_x4_8x16_910 _x264_pixel_satd_x4_8x8_911 _x264_pixel_satd_x4_8x4_912 _x264_pixel_satd_x4_4x8_913 _x264_pixel_satd_x4_4x4_914 _pixel_avg_16x16_794 _pixel_avg_16x8_795 _pixel_avg_8x16_796 _pixel_avg_8x8_797 _pixel_avg_8x4_798 _pixel_avg_4x16_799 _pixel_avg_4x8_800 _pixel_avg_4x4_801 _pixel_avg_4x2_802 _pixel_avg_2x8_803 _pixel_avg_2x4_804 _pixel_avg_2x2_805 _mbtree_propagate_cost_825 _x264_pixel_sad_x4_16x16 _x264_pixel_sad_x4_16x8 _x264_pixel_sad_x4_8x16 _x264_pixel_sad_x4_8x8 _x264_pixel_sad_x4_8x4 _x264_pixel_sad_x4_4x8 _x264_pixel_sad_x4_4x4 _x264_pixel_satd_x4_16x16 _x264_pixel_satd_x4_16x8 _x264_pixel_satd_x4_8x16 _x264_pixel_satd_x4_8x8 _x264_pixel_satd_x4_8x4 _x264_pixel_satd_x4_4x8 _x264_pixel_satd_x4_4x4 _pixel_avg_16x16 _pixel_avg_16x8 _pixel_avg_8x16 _pixel_avg_8x8 _pixel_avg_8x4 _pixel_avg_4x16 _pixel_avg_4x8 _pixel_avg_4x4 _pixel_avg_4x2 _pixel_avg_2x8 _pixel_avg_2x4 _pixel_avg_2x2 _mbtree_propagate_cost 0 0 0 0 0 0 0 0 0".split(" "),
V="0 _pixel_ssd_nv12_core_929 _x264_10_plane_copy_interleave_c _x264_10_plane_copy_deinterleave_c _plane_copy_deinterleave_v210_c_815 _hpel_filter_816 _pixel_ssd_nv12_core _x264_8_plane_copy_interleave_c _x264_8_plane_copy_deinterleave_c _plane_copy_deinterleave_v210_c _hpel_filter 0 0 0 0 0".split(" "),W="0 _mc_luma_791 _mc_chroma_793 _frame_init_lowres_core_820 _mbtree_propagate_list_826 _mc_luma _mc_chroma _frame_init_lowres_core _mbtree_propagate_list 0 0 0 0 0 0 0".split(" "),X=["0","_plane_copy_deinterleave_rgb_c_814",
"_plane_copy_deinterleave_rgb_c","0"];b.wasmTableSize=859;b.wasmMaxTableSize=859;b.i={};
b.j={enlargeMemory:sa,getTotalMemory:function(){return l},abortOnCannotGrowMemory:function(){e("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+l+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")},abortStackOverflow:function(a){e("Stack overflow! Attempted to allocate "+a+" bytes on the stack, but stack has only "+
(Ua-la()+a)+" bytes available!")},nullFunc_dd:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'dd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: did: "+
q[a]+"  didd: "+r[a]+"  ii: "+u[a]+"  vi: "+M[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viidi: "+O[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_did:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'did'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: didd: "+
r[a]+"  dd: "+p[a]+"  ii: "+u[a]+"  vi: "+M[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viidi: "+O[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_didd:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'didd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: did: "+
q[a]+"  dd: "+p[a]+"  ii: "+u[a]+"  vi: "+M[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viidi: "+O[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_fiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'fiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  ii: "+u[a]+"  iiii: "+x[a]+"  viii: "+Q[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  iij: "+G[a]+"  vi: "+M[a]+"  jiji: "+L[a]+"  iiiii: "+y[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  viiii: "+R[a]+"  iiiji: "+E[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  did: "+q[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiifii: "+w[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_ii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  iij: "+G[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  fiii: "+t[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  did: "+q[a]+"  dd: "+p[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  didd: "+r[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+
V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: ii: "+
u[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  viiiii: "+S[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+
V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiifii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiifii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  ii: "+u[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  viifi: "+P[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  iiiiii: "+z[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  jiiij: "+J[a]+"  jiji: "+L[a]+"  vi: "+M[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  did: "+q[a]+"  iiijjji: "+F[a]+"  didd: "+r[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  dd: "+p[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  ii: "+u[a]+"  iiiii: "+y[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+A[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  jiji: "+L[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiifii: "+w[a]+"  viiiii: "+S[a]+"  did: "+q[a]+"  didd: "+r[a]+"  iiijjji: "+F[a]+"  viiiiii: "+T[a]+"  dd: "+p[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+
V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiii: "+
x[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+A[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiifii: "+w[a]+"  viiiii: "+S[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  vi: "+M[a]+"  jiji: "+L[a]+"  viiiiii: "+T[a]+"  did: "+q[a]+"  didd: "+r[a]+"  iiijjji: "+F[a]+"  dd: "+p[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+
V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiii: "+
x[a]+"  iiiii: "+y[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iiiiiii: "+A[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viiiiii: "+T[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jiji: "+L[a]+"  vi: "+M[a]+"  did: "+q[a]+"  viiiiiii: "+U[a]+"  iiijjji: "+F[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  viiiiiiii: "+
V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiii: "+
x[a]+"  iiiii: "+y[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viiiiiii: "+U[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jiji: "+L[a]+"  vi: "+M[a]+"  did: "+q[a]+"  iiijjji: "+F[a]+"  viiiiiiii: "+V[a]+"  didd: "+r[a]+
"  dd: "+p[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiii: "+
x[a]+"  iiiii: "+y[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  iiiiiii: "+A[a]+"  ii: "+u[a]+"  iiiiiiiiii: "+C[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viiiiiii: "+U[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jiji: "+L[a]+"  viiiiiiii: "+V[a]+"  vi: "+M[a]+"  did: "+q[a]+"  iiijjji: "+F[a]+"  didd: "+r[a]+"  viiiiiiiii: "+
W[a]+"  dd: "+p[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiiiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiiii: "+
y[a]+"  iiii: "+x[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  iiiiiii: "+A[a]+"  iiiiiiii: "+B[a]+"  ii: "+u[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viiiiiii: "+U[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jiji: "+L[a]+"  viiiiiiii: "+V[a]+"  did: "+q[a]+"  vi: "+M[a]+"  viiiiiiiii: "+W[a]+"  iiijjji: "+F[a]+
"  didd: "+r[a]+"  dd: "+p[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiiij:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iiii: "+
x[a]+"  iiiii: "+y[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iij: "+G[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  jiiij: "+J[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  iiiiii: "+z[a]+"  iiifii: "+w[a]+"  viiiii: "+S[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  jiiji: "+K[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jiji: "+L[a]+"  vi: "+M[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  did: "+q[a]+"  iiijjji: "+F[a]+"  didd: "+r[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  dd: "+p[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiiji:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  ii: "+u[a]+"  iiii: "+x[a]+"  iij: "+G[a]+"  iiiii: "+y[a]+"  jiiji: "+K[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  jiiij: "+J[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  jiji: "+L[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  vi: "+M[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiijjji: "+F[a]+"  did: "+q[a]+"  didd: "+r[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  dd: "+p[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iiijjji:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iiijjji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: iii: "+
v[a]+"  ii: "+u[a]+"  iiii: "+x[a]+"  iiiji: "+E[a]+"  iij: "+G[a]+"  iiiii: "+y[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiiii: "+I[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  iiiiij: "+D[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  viiiii: "+S[a]+"  jiji: "+L[a]+"  vi: "+M[a]+"  did: "+q[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_iij:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'iij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: ii: "+
u[a]+"  iii: "+v[a]+"  jii: "+H[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  viii: "+Q[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  did: "+q[a]+"  iiiii: "+y[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  iiiiij: "+D[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  viiiii: "+S[a]+"  iiijjji: "+F[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_jii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'jii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: jiiii: "+
I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  ii: "+u[a]+"  jiji: "+L[a]+"  iii: "+v[a]+"  vii: "+N[a]+"  iij: "+G[a]+"  vi: "+M[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  viii: "+Q[a]+"  did: "+q[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_jiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'jiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: jii: "+
H[a]+"  iiii: "+x[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iiiii: "+y[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  viiii: "+R[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  vii: "+N[a]+"  iij: "+G[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  vi: "+M[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiifii: "+w[a]+"  did: "+q[a]+"  didd: "+r[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiijjji: "+F[a]+"  dd: "+p[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_jiiij:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'jiiij'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: jii: "+
H[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  ii: "+u[a]+"  jiiii: "+I[a]+"  jiiji: "+K[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  viii: "+Q[a]+"  iiiji: "+E[a]+"  vii: "+N[a]+"  iiiii: "+y[a]+"  viiii: "+R[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  vi: "+M[a]+"  iiiiij: "+D[a]+"  did: "+q[a]+"  iiiiii: "+z[a]+"  viiiii: "+S[a]+"  iiifii: "+w[a]+"  didd: "+r[a]+"  iiijjji: "+F[a]+"  dd: "+p[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_jiiji:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'jiiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: jii: "+
H[a]+"  jiji: "+L[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  ii: "+u[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  viii: "+Q[a]+"  vii: "+N[a]+"  iiiii: "+y[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  vi: "+M[a]+"  did: "+q[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  didd: "+r[a]+"  iiijjji: "+F[a]+"  dd: "+p[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_jiji:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'jiji'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: jii: "+
H[a]+"  ii: "+u[a]+"  jiiji: "+K[a]+"  iij: "+G[a]+"  iii: "+v[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  viii: "+Q[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  iiiji: "+E[a]+"  did: "+q[a]+"  iiiii: "+y[a]+"  viiii: "+R[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiii: "+S[a]+"  iiifii: "+w[a]+"  iiijjji: "+F[a]+"  iiiiiii: "+A[a]+"  viiiiii: "+T[a]+"  iiiiiiii: "+B[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  iiiiiiiiii: "+
C[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_vi:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: vii: "+
N[a]+"  viii: "+Q[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ii: "+u[a]+"  did: "+q[a]+"  iii: "+v[a]+"  iij: "+G[a]+"  jii: "+H[a]+"  dd: "+p[a]+"  didd: "+r[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+
A[a]+"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_vii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: vi: "+
M[a]+"  viii: "+Q[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  ii: "+u[a]+"  iii: "+v[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+
A[a]+"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viidi:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viidi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: vii: "+
N[a]+"  vi: "+M[a]+"  viii: "+Q[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  viifi: "+P[a]+"  viiii: "+R[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  jii: "+H[a]+"  did: "+q[a]+"  iij: "+G[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiji: "+K[a]+"  jiiij: "+J[a]+"  didd: "+r[a]+"  viiiii: "+S[a]+"  jiji: "+L[a]+"  dd: "+p[a]+"  iiifii: "+w[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  viiiiii: "+T[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiiii: "+U[a]+"  iiiiiiii: "+B[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+
W[a]+"  iiiiiiiiii: "+C[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_viifi:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viifi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: vii: "+
N[a]+"  vi: "+M[a]+"  viii: "+Q[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  viidi: "+O[a]+"  viiii: "+R[a]+"  iiii: "+x[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  iiiii: "+y[a]+"  iiiji: "+E[a]+"  jiiii: "+I[a]+"  jiiji: "+K[a]+"  jiiij: "+J[a]+"  fiii: "+t[a]+"  iiifii: "+w[a]+"  viiiii: "+S[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  didd: "+r[a]+"  viiiiii: "+T[a]+"  dd: "+p[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+F[a]+"  viiiiiii: "+U[a]+"  iiiiiiii: "+B[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+
W[a]+"  iiiiiiiiii: "+C[a]+"  viiiiiiiiiii: "+X[a]+"  ");e(a)},nullFunc_viii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: vii: "+
N[a]+"  vi: "+M[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  fiii: "+t[a]+"  iiii: "+x[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiji: "+L[a]+"  iiiii: "+y[a]+"  jiiii: "+I[a]+"  jiiij: "+J[a]+"  iiiji: "+E[a]+"  jiiji: "+K[a]+"  did: "+q[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiifii: "+w[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiiii: "+A[a]+
"  iiijjji: "+F[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viii: "+
Q[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  viiiii: "+S[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iiii: "+x[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  iiiii: "+y[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  iiiiii: "+z[a]+"  iiiiij: "+D[a]+"  iiifii: "+w[a]+"  did: "+q[a]+"  didd: "+r[a]+"  iiiiiii: "+A[a]+"  iiijjji: "+
F[a]+"  dd: "+p[a]+"  iiiiiiii: "+B[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viii: "+
Q[a]+"  viiii: "+R[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iii: "+v[a]+"  ii: "+u[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  iiiiii: "+z[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  iiiiiii: "+A[a]+"  did: "+q[a]+"  iiijjji: "+F[a]+"  didd: "+
r[a]+"  iiiiiiii: "+B[a]+"  dd: "+p[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viii: "+
Q[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  vii: "+N[a]+"  vi: "+M[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  ii: "+u[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  iiiiiii: "+A[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  iiiiiiii: "+B[a]+"  did: "+q[a]+"  iiijjji: "+
F[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viii: "+
Q[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  vii: "+N[a]+"  viiiiii: "+T[a]+"  vi: "+M[a]+"  viiiiiiii: "+V[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iiii: "+x[a]+"  iiiii: "+y[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  iiiiiii: "+A[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  ii: "+u[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  iiiiiiii: "+B[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  iiijjji: "+
F[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  iiiiiiiiii: "+C[a]+"  ");e(a)},nullFunc_viiiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viii: "+
Q[a]+"  viiii: "+R[a]+"  viiiii: "+S[a]+"  vii: "+N[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  vi: "+M[a]+"  viiiiiiiii: "+W[a]+"  viiiiiiiiiii: "+X[a]+"  iiiii: "+y[a]+"  iiii: "+x[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  iiiiiii: "+A[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiiiiii: "+B[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  ii: "+u[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  iiijjji: "+
F[a]+"  didd: "+r[a]+"  iiiiiiiiii: "+C[a]+"  dd: "+p[a]+"  ");e(a)},nullFunc_viiiiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viiii: "+
R[a]+"  viii: "+Q[a]+"  viiiii: "+S[a]+"  vii: "+N[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  vi: "+M[a]+"  viiiiiiiiiii: "+X[a]+"  iiiii: "+y[a]+"  iiii: "+x[a]+"  iiiiii: "+z[a]+"  iii: "+v[a]+"  iiiiiii: "+A[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  iiiiiiii: "+B[a]+"  fiii: "+t[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  ii: "+u[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  did: "+q[a]+"  iiiiiiiiii: "+
C[a]+"  iiijjji: "+F[a]+"  didd: "+r[a]+"  dd: "+p[a]+"  ");e(a)},nullFunc_viiiiiiiiiii:function(a){b.printErr("Invalid function pointer '"+a+"' called with signature 'viiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");b.printErr("This pointer might make sense in another type signature: viiii: "+
R[a]+"  viii: "+Q[a]+"  viiiii: "+S[a]+"  vii: "+N[a]+"  viiiiii: "+T[a]+"  viiiiiii: "+U[a]+"  viiiiiiii: "+V[a]+"  vi: "+M[a]+"  viiiiiiiii: "+W[a]+"  iiiii: "+y[a]+"  iiii: "+x[a]+"  iiiiii: "+z[a]+"  iiiiiii: "+A[a]+"  iii: "+v[a]+"  jiiii: "+I[a]+"  viidi: "+O[a]+"  viifi: "+P[a]+"  iiiji: "+E[a]+"  fiii: "+t[a]+"  iiiiiiii: "+B[a]+"  iiifii: "+w[a]+"  iiiiij: "+D[a]+"  jii: "+H[a]+"  iij: "+G[a]+"  jiiij: "+J[a]+"  jiiji: "+K[a]+"  jiji: "+L[a]+"  ii: "+u[a]+"  iiiiiiiiii: "+C[a]+"  did: "+
q[a]+"  didd: "+r[a]+"  iiijjji: "+F[a]+"  dd: "+p[a]+"  ");e(a)},___assert_fail:function(a,c,d,f){e("Assertion failed: "+Ca(a)+", at: "+[c?Ca(c):"unknown filename",d,f?Ca(f):"unknown function"])},___lock:function(){},___setErrNo:vb,___syscall140:function(a,c){qb=c;try{var d=sb.c();rb();var f=rb(),h=rb(),k=rb();FS.u(d,f,k);g[h>>2]=d.position;d.m&&0===f&&0===k&&(d.m=null);return 0}catch(Z){return e(Z),-Z.a}},___syscall145:function(a,c){qb=c;try{var d=sb.c(),f=rb(),h=rb();return sb.o(d,f,h)}catch(k){return e(k),
-k.a}},___syscall146:ub,___syscall195:function(a,c){qb=c;try{var d=Ca(rb()),f=rb();return sb.l(FS.stat,d,f)}catch(h){return e(h),-h.a}},___syscall197:function(a,c){qb=c;try{var d=sb.c(),f=rb();return sb.l(FS.stat,d.path,f)}catch(h){return e(h),-h.a}},___syscall219:function(a,c){qb=c;return 0},___syscall221:function(a,c){qb=c;return 0},___syscall3:function(a,c){qb=c;try{var d=sb.c(),f=rb(),h=rb();return FS.read(d,Aa,f,h)}catch(k){return e(k),-k.a}},___syscall38:function(a,c){qb=c;try{var d=Ca(rb()),
f=Ca(rb());FS.rename(d,f);return 0}catch(h){return e(h),-h.a}},___syscall5:function(a,c){qb=c;try{return Ca(rb()),rb(),rb(),nb(),(void 0).fd}catch(d){return e(d),-d.a}},___syscall54:function(a,c){qb=c;return 0},___syscall6:function(a,c){qb=c;try{var d=sb.c();FS.close(d);return 0}catch(f){return e(f),-f.a}},___unlock:function(){},_abort:function(){b.abort()},_clock:wb,_clock_gettime:function(a,c){if(0===a)a=Date.now();else if(1===a&&(fa||"undefined"!==typeof dateNow||(da||ea)&&self.performance&&self.performance.now))a=
xb();else return vb(22),-1;g[c>>2]=a/1E3|0;g[c+4>>2]=a%1E3*1E6|0;return 0},_emscripten_memcpy_big:function(a,c,d){Ba.set(Ba.subarray(c,c+d),a);return a},_exit:function(a){b.exit(a)},_fabs:gb,_getenv:Bb,_gettimeofday:function(a){var c=Date.now();g[a>>2]=c/1E3|0;g[a+4>>2]=c%1E3*1E3|0;return 0},_gmtime_r:function(a,c){a=new Date(1E3*g[a>>2]);g[c>>2]=a.getUTCSeconds();g[c+4>>2]=a.getUTCMinutes();g[c+8>>2]=a.getUTCHours();g[c+12>>2]=a.getUTCDate();g[c+16>>2]=a.getUTCMonth();g[c+20>>2]=a.getUTCFullYear()-
1900;g[c+24>>2]=a.getUTCDay();g[c+36>>2]=0;g[c+32>>2]=0;g[c+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;g[c+40>>2]=Eb;return c},_llvm_exp2_f32:Fb,_llvm_exp2_f64:function(){return Fb.apply(null,arguments)},_llvm_trunc_f64:hb,_localtime_r:function(a,c){Jb();a=new Date(1E3*g[a>>2]);g[c>>2]=a.getSeconds();g[c+4>>2]=a.getMinutes();g[c+8>>2]=a.getHours();g[c+12>>2]=a.getDate();g[c+16>>2]=a.getMonth();g[c+20>>2]=a.getFullYear()-1900;g[c+24>>2]=a.getDay();var d=new Date(a.getFullYear(),
0,1);g[c+28>>2]=(a.getTime()-d.getTime())/864E5|0;g[c+36>>2]=-(60*a.getTimezoneOffset());var f=(new Date(2E3,6,1)).getTimezoneOffset();d=d.getTimezoneOffset();a=(f!=d&&a.getTimezoneOffset()==Math.min(d,f))|0;g[c+32>>2]=a;g[c+40>>2]=g[Gb+(a?4:0)>>2];return c},_mktime:function(a){Jb();var c=new Date(g[a+20>>2]+1900,g[a+16>>2],g[a+12>>2],g[a+8>>2],g[a+4>>2],g[a>>2],0),d=g[a+32>>2],f=c.getTimezoneOffset(),h=new Date(c.getFullYear(),0,1),k=(new Date(2E3,6,1)).getTimezoneOffset(),Z=h.getTimezoneOffset(),
ba=Math.min(Z,k);0>d?g[a+32>>2]=Number(k!=Z&&ba==f):0<d!=(ba==f)&&(k=Math.max(Z,k),c.setTime(c.getTime()+6E4*((0<d?ba:k)-f)));g[a+24>>2]=c.getDay();g[a+28>>2]=(c.getTime()-h.getTime())/864E5|0;return c.getTime()/1E3|0},_nanosleep:function(a,c){var d=g[a>>2];a=g[a+4>>2];0!==c&&(g[c>>2]=0,g[c+4>>2]=0);c=(1E6*d+a/1E3)/1E3;if((da||ea)&&self.performance&&self.performance.now)for(d=self.performance.now();self.performance.now()-d<c;);else for(d=Date.now();Date.now()-d<c;);return 0},DYNAMICTOP_PTR:ra,STACKTOP:Ta,
STACK_MAX:Ua};var Y=b.asm(b.i,b.j,buffer),Yb=Y._close_muxer;Y._close_muxer=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Yb.apply(null,arguments)};var Zb=Y._free;
Y._free=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Zb.apply(null,arguments)};var $b=Y._get_next_frame;
Y._get_next_frame=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return $b.apply(null,arguments)};var ac=Y._init_muxer;
Y._init_muxer=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return ac.apply(null,arguments)};var bc=Y._llvm_bswap_i16;
Y._llvm_bswap_i16=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return bc.apply(null,arguments)};var cc=Y._llvm_bswap_i32;
Y._llvm_bswap_i32=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return cc.apply(null,arguments)};var dc=Y._llvm_rint_f64;
Y._llvm_rint_f64=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return dc.apply(null,arguments)};var ec=Y._llvm_round_f32;
Y._llvm_round_f32=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return ec.apply(null,arguments)};var fc=Y._llvm_round_f64;
Y._llvm_round_f64=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return fc.apply(null,arguments)};var hc=Y._malloc;Y._malloc=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return hc.apply(null,arguments)};
var ic=Y._memmove;Y._memmove=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return ic.apply(null,arguments)};var jc=Y._rintf;
Y._rintf=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return jc.apply(null,arguments)};var kc=Y._sbrk;Y._sbrk=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return kc.apply(null,arguments)};
var lc=Y._set_frame;Y._set_frame=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return lc.apply(null,arguments)};var mc=Y.establishStackSpace;
Y.establishStackSpace=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return mc.apply(null,arguments)};var nc=Y.getTempRet0;
Y.getTempRet0=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return nc.apply(null,arguments)};var oc=Y.setTempRet0;Y.setTempRet0=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return oc.apply(null,arguments)};
var pc=Y.setThrew;Y.setThrew=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return pc.apply(null,arguments)};var qc=Y.stackAlloc;
Y.stackAlloc=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return qc.apply(null,arguments)};var rc=Y.stackRestore;Y.stackRestore=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return rc.apply(null,arguments)};
var sc=Y.stackSave;Y.stackSave=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return sc.apply(null,arguments)};b.asm=Y;
b._close_muxer=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._close_muxer.apply(null,arguments)};
var Xa=b._emscripten_replace_memory=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._emscripten_replace_memory.apply(null,arguments)},Cb=b._free=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");
return b.asm._free.apply(null,arguments)};b._get_next_frame=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._get_next_frame.apply(null,arguments)};
b._init_muxer=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._init_muxer.apply(null,arguments)};
b._llvm_bswap_i16=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._llvm_bswap_i16.apply(null,arguments)};
b._llvm_bswap_i32=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._llvm_bswap_i32.apply(null,arguments)};
b._llvm_rint_f64=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._llvm_rint_f64.apply(null,arguments)};
b._llvm_round_f32=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._llvm_round_f32.apply(null,arguments)};
b._llvm_round_f64=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._llvm_round_f64.apply(null,arguments)};
var za=b._malloc=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._malloc.apply(null,arguments)};
b._memmove=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._memmove.apply(null,arguments)};b._rintf=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._rintf.apply(null,arguments)};
b._sbrk=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._sbrk.apply(null,arguments)};b._set_frame=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm._set_frame.apply(null,arguments)};
b.establishStackSpace=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.establishStackSpace.apply(null,arguments)};
b.getTempRet0=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.getTempRet0.apply(null,arguments)};
b.setTempRet0=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.setTempRet0.apply(null,arguments)};
b.setThrew=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.setThrew.apply(null,arguments)};
var ma=b.stackAlloc=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.stackAlloc.apply(null,arguments)};
b.stackRestore=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.stackRestore.apply(null,arguments)};
var la=b.stackSave=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.stackSave.apply(null,arguments)};
b.dynCall_vi=function(){assert(m,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!n,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return b.asm.dynCall_vi.apply(null,arguments)};b.asm=Y;b.intArrayFromString||(b.intArrayFromString=function(){e("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.intArrayToString||(b.intArrayToString=function(){e("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.ccall||(b.ccall=function(){e("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.cwrap||(b.cwrap=function(){e("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.setValue||(b.setValue=function(){e("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getValue||(b.getValue=function(){e("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.allocate||(b.allocate=function(){e("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getMemory||(b.getMemory=function(){e("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.Pointer_stringify||(b.Pointer_stringify=function(){e("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.AsciiToString||(b.AsciiToString=function(){e("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.stringToAscii||(b.stringToAscii=function(){e("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.UTF8ArrayToString||(b.UTF8ArrayToString=function(){e("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.UTF8ToString||(b.UTF8ToString=function(){e("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.stringToUTF8Array||(b.stringToUTF8Array=function(){e("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.stringToUTF8||(b.stringToUTF8=function(){e("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.lengthBytesUTF8||(b.lengthBytesUTF8=function(){e("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.UTF16ToString||(b.UTF16ToString=function(){e("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.stringToUTF16||(b.stringToUTF16=function(){e("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.lengthBytesUTF16||(b.lengthBytesUTF16=function(){e("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.UTF32ToString||(b.UTF32ToString=function(){e("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.stringToUTF32||(b.stringToUTF32=function(){e("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.lengthBytesUTF32||(b.lengthBytesUTF32=function(){e("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.allocateUTF8||(b.allocateUTF8=function(){e("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.stackTrace||(b.stackTrace=function(){e("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.addOnPreRun||(b.addOnPreRun=function(){e("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.addOnInit||(b.addOnInit=function(){e("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.addOnPreMain||(b.addOnPreMain=function(){e("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.addOnExit||(b.addOnExit=function(){e("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.addOnPostRun||(b.addOnPostRun=function(){e("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.writeStringToMemory||(b.writeStringToMemory=function(){e("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.writeArrayToMemory||(b.writeArrayToMemory=function(){e("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.writeAsciiToMemory||(b.writeAsciiToMemory=function(){e("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.addRunDependency||(b.addRunDependency=function(){e("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.removeRunDependency||(b.removeRunDependency=function(){e("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});
b.FS||(b.FS=function(){e("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.FS_createFolder||(b.FS_createFolder=function(){e("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.FS_createPath||(b.FS_createPath=function(){e("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});
b.FS_createDataFile||(b.FS_createDataFile=function(){e("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.FS_createPreloadedFile||(b.FS_createPreloadedFile=function(){e("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});
b.FS_createLazyFile||(b.FS_createLazyFile=function(){e("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.FS_createLink||(b.FS_createLink=function(){e("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});
b.FS_createDevice||(b.FS_createDevice=function(){e("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.FS_unlink||(b.FS_unlink=function(){e("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")});b.GL||(b.GL=function(){e("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.staticAlloc||(b.staticAlloc=function(){e("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.dynamicAlloc||(b.dynamicAlloc=function(){e("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.warnOnce||(b.warnOnce=function(){e("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.loadDynamicLibrary||(b.loadDynamicLibrary=function(){e("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.loadWebAssemblyModule||(b.loadWebAssemblyModule=function(){e("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getLEB||(b.getLEB=function(){e("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getFunctionTables||(b.getFunctionTables=function(){e("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.alignFunctionTables||(b.alignFunctionTables=function(){e("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.registerFunctions||(b.registerFunctions=function(){e("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.addFunction||(b.addFunction=function(){e("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.removeFunction||(b.removeFunction=function(){e("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getFuncWrapper||(b.getFuncWrapper=function(){e("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.prettyPrint||(b.prettyPrint=function(){e("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.makeBigInt||(b.makeBigInt=function(){e("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.dynCall||(b.dynCall=function(){e("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});b.getCompilerSetting||(b.getCompilerSetting=function(){e("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")});
b.ALLOC_NORMAL||Object.defineProperty(b,"ALLOC_NORMAL",{get:function(){e("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});b.ALLOC_STACK||Object.defineProperty(b,"ALLOC_STACK",{get:function(){e("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});b.ALLOC_STATIC||Object.defineProperty(b,"ALLOC_STATIC",{get:function(){e("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});
b.ALLOC_DYNAMIC||Object.defineProperty(b,"ALLOC_DYNAMIC",{get:function(){e("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});b.ALLOC_NONE||Object.defineProperty(b,"ALLOC_NONE",{get:function(){e("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});b.then=function(a){if(b.calledRun)a(b);else{var c=b.onRuntimeInitialized;b.onRuntimeInitialized=function(){c&&c();a(b)}}return b};
function ka(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}ka.prototype=Error();ka.prototype.constructor=ka;kb=function tc(){b.calledRun||uc();b.calledRun||(kb=tc)};
function uc(){function a(){if(!b.calledRun&&(b.calledRun=!0,!xa)){Wa();m||(m=!0,$a(bb));Wa();$a(cb);if(b.onRuntimeInitialized)b.onRuntimeInitialized();assert(!b._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');Wa();if(b.postRun)for("function"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var a=b.postRun.shift();eb.unshift(a)}$a(eb)}}if(!(0<ib)){assert(0==(Ua&3));Oa[(Ua>>2)-1]=34821223;Oa[(Ua>>2)-2]=2310721022;if(b.preRun)for("function"==
typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)fb();$a(ab);0<ib||b.calledRun||(b.setStatus?(b.setStatus("Running..."),setTimeout(function(){setTimeout(function(){b.setStatus("")},1);a()},1)):a(),Wa())}}b.run=uc;
function vc(){var a=b.print,c=b.printErr,d=!1;b.print=b.printErr=function(){d=!0};try{tb&&tb()}catch(f){}b.print=a;b.printErr=c;d&&ua("stdio streams had content in them that was not flushed. you should set NO_EXIT_RUNTIME to 0 (see the FAQ), or make sure to emit a newline when you printf etc.")}
b.exit=function(a,c){vc();if(!c||!b.noExitRuntime||0!==a){if(b.noExitRuntime)c||b.printErr("exit("+a+") called, but NO_EXIT_RUNTIME is set, so halting execution but not exiting the runtime or preventing further async execution (build with NO_EXIT_RUNTIME=0, if you want a true shutdown)");else if(xa=!0,Ta=void 0,Wa(),$a(db),n=!0,b.onExit)b.onExit(a);fa&&process.exit(a);b.quit(a,new ka(a))}};var wc=[];
function e(a){if(b.onAbort)b.onAbort(a);void 0!==a?(b.print(a),b.printErr(a),a=JSON.stringify(a)):a="";xa=!0;var c="abort("+a+") at "+Ia()+"";wc&&wc.forEach(function(d){c=d(c,a)});throw c;}b.abort=e;if(b.preInit)for("function"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();b.noExitRuntime=!0;uc();


  return Demuxer;
};
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = Demuxer;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return Demuxer; });
else if (typeof exports === 'object')
  exports["Demuxer"] = Demuxer;
